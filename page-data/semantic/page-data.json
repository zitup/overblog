{"componentChunkName":"component---src-templates-blog-post-js","path":"/semantic/","result":{"data":{"site":{"siteMetadata":{"title":"Overblog","author":"zit"}},"markdownRemark":{"id":"3cc069a3-b5cd-5550-88a2-cceb50aecd42","html":"<ul>\n<li><strong>JS 中的语义化</strong></li>\n</ul>\n<p>主要是函数、变量等命名的方式，通过命名就可以看出作用，不用去了解内部实现或者具体使用，比如<code class=\"language-text\">React</code>的 API：<code class=\"language-text\">getDerivedStateFromProps</code>、<code class=\"language-text\">componentDidMount</code>，命名都很语义化</p>\n<ul>\n<li><strong>CSS 中的语义化</strong></li>\n</ul>\n<p>主要是使用固定的属性去选元素，比如 <code class=\"language-text\">.fruits__item</code> 优于 <code class=\"language-text\">div &gt; ul &gt; li</code>，前者很快就可以定位到对应的元素</p>\n<ul>\n<li><strong>HTML 中的语义化</strong></li>\n</ul>\n<p>主要是标签有特定的含义，主要体现在：</p>\n<ol>\n<li><strong>本身命名的语义化</strong>：比如 <code class=\"language-text\">header aside footer article main footer</code>，从名字就可以看出它的作用，相比页面充斥着很多的<code class=\"language-text\">div</code>，代码更清晰，查找起来也更快</li>\n<li><strong>SEO 友好</strong>：比如 <code class=\"language-text\">h1</code> 标签，搜索引擎会把它的内容当作一个重要的关键词，从而影响搜索排序</li>\n<li><strong>可访问性强</strong>：屏幕阅读器喜欢语义明确的标签，让界面有更好对体验，无障碍性也会比较好</li>\n</ol>","timeToRead":1,"frontmatter":{"title":"Semantic","date":"September 09, 2020","spoiler":"前端中的语义化","cta":"semantic"},"fields":{"slug":"/semantic/","langKey":"en"}}},"pageContext":{"slug":"/semantic/","previous":{"fields":{"slug":"/search-in-terminal/","langKey":"en","directoryName":"search-in-terminal"},"frontmatter":{"title":"在命令行使用谷歌搜索"}},"next":{"fields":{"slug":"/an-android-4-4-problem/","langKey":"en","directoryName":"an-android-4-4-problem"},"frontmatter":{"title":"一个安卓 4.4 H5 的兼容性问题"}},"translations":[],"translatedLinks":[]}},"staticQueryHashes":["708209134"]}