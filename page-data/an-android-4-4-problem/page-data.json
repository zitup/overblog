{"componentChunkName":"component---src-templates-blog-post-js","path":"/an-android-4-4-problem/","result":{"data":{"site":{"siteMetadata":{"title":"Overblog","author":"zit"}},"markdownRemark":{"id":"83640996-c48f-5513-bd01-775906927ef6","html":"<h2 id=\"解决过程\"><a href=\"#%E8%A7%A3%E5%86%B3%E8%BF%87%E7%A8%8B\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>解决过程</h2>\n<p><strong>现象</strong> 是 react 16+ 在 android4.4 的 webview 和自带的浏览器内，会白屏，本来以为只是 react 16 的兼容性问题，搞了半天，还有别的兼容性问题…</p>\n<p><strong>首先</strong>是 react 16 运行的 JS 环境要求，看这里<a href=\"https://zh-hans.reactjs.org/docs/javascript-environment-requirements.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">官方说明</a>，说得很清楚了，因为用到了 <code class=\"language-text\">Map</code> 和 <code class=\"language-text\">Set</code>，而这俩的兼容性也有要求，所以需要加上 polyfill，官方有俩推荐：<code class=\"language-text\">core-js</code> 和 <code class=\"language-text\">babel-polyfill</code>。\n我用的是 <code class=\"language-text\">core-js</code> ，像文档里那样，把引用放到入口文件的<strong>最</strong>顶部，或者放到 <code class=\"language-text\">webpack</code> 的打包入口里。</p>\n<p><strong>然后</strong>把上面搞完了，还是白屏，怀疑是引用的姿势不对，把 <code class=\"language-text\">core-js</code> 改到了 <code class=\"language-text\">webpack</code> 的入口那里…其实是一样的，只是还有别的错误。再尝试使用 <code class=\"language-text\">window.onerror</code> 捕获错误，只弹出一个字符串 <code class=\"language-text\">Script error.</code>，没有什么有效信息，也不行，再尝试最笨的办法，从入口文件开始，一步一个 <code class=\"language-text\">alert</code>，最后终于定位到了一个方法，内部用到了 <code class=\"language-text\">localStorage</code>，打印 <code class=\"language-text\">window.localStorage</code> 是 <code class=\"language-text\">null</code>，找到问题就好解决了，判断一下是否存在，做了兼容处理。</p>\n<blockquote>\n<p>后续查找 <code class=\"language-text\">Script error.</code> 这几个字符是浏览器的同源策略（Same Origin Policy <a href=\"https://blog.sentry.io/2016/05/17/what-is-script-error\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">参考这里</a>），因为 js 是放在 cdn 上，触发了同源限制，浏览器为了避免信息泄漏，只展示脚本错误几个字。</p>\n</blockquote>\n<h2 id=\"几个关键点\"><a href=\"#%E5%87%A0%E4%B8%AA%E5%85%B3%E9%94%AE%E7%82%B9\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>几个关键点</h2>\n<ul>\n<li>解决问题没有明确的思路，一直抱有侥幸心理，胡乱尝试，浪费了很多时间，其实科学的解决思路才是解决问题的最快办法</li>\n<li>\n<p>完善错误报警</p>\n<ul>\n<li>第一个问题是 react 16 的兼容性问题，会直接导致渲染出错，尝试了使用<a href=\"https://zh-hans.reactjs.org/docs/error-boundaries.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">错误边界</a>包裹根组件，没有报出错误，应该是兼容性问题导致错误边界组件本身也无法正确渲染了（猜测是这样，没有看过源码），这样的兼容性问题貌似没有好的错误报警方式</li>\n<li>事件处理器内部的错误，也就是 js 的执行错误，只能多使用 <code class=\"language-text\">try catch</code> 包住，尽量避免直接崩溃的情况，还可以及时上报。如果使用了 <code class=\"language-text\">sentry</code>，后端较容易处理，可以自动捕获直接抛出来的错误，前端相对来说比较麻烦，只能手动捕获上报了。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"一个手机端调试工具\"><a href=\"#%E4%B8%80%E4%B8%AA%E6%89%8B%E6%9C%BA%E7%AB%AF%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>一个手机端调试工具</h2>\n<p><a href=\"https://github.com/liriliri/eruda\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">eruda</a>，可以展示 <code class=\"language-text\">console</code> 的消息，一定程度上可能有用。</p>","timeToRead":2,"frontmatter":{"title":"一个安卓 4.4 H5 的兼容性问题","date":"September 22, 2020","spoiler":"react 16、localStorage","cta":"react"},"fields":{"slug":"/an-android-4-4-problem/","langKey":"en"}}},"pageContext":{"slug":"/an-android-4-4-problem/","previous":{"fields":{"slug":"/semantic/","langKey":"en","directoryName":"semantic"},"frontmatter":{"title":"Semantic"}},"next":{"fields":{"slug":"/react-17/","langKey":"en","directoryName":"react-17"},"frontmatter":{"title":"React v17.0 正式发布小记"}},"translations":[],"translatedLinks":[]}},"staticQueryHashes":["708209134"]}